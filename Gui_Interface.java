
package Image_display;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author KAVYA JANARDHANA
 */
public class Gui_Interface extends javax.swing.JFrame {

    private  int param_max_count;
    private String arr[];
    static int[] cols;
    private final DefaultListModel leftlist;
    private final DefaultListModel rightlist;
    public static progres_bar p1 = null; 
    static boolean obj_exists=false;
    public static Irig_graph  Irig_g = null;
    public static Irig_graph_Img Irig_g_p = null;
    public static Irig_slide_img Irig_s = null;
    public static String delimeter="\t";
    Gui_Interface() {
        
        initComponents();
        
        this.rightlist = new DefaultListModel();
        this.leftlist = new DefaultListModel();        
        select_radio_Group.add(jRadio_slide);
        select_radio_Group.add(jRadio_slide);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        select_radio_Group = new javax.swing.ButtonGroup();
        add_jbutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        parameter_jList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        para_selected_jList2 = new javax.swing.JList<>();
        jTextField1 = new javax.swing.JTextField();
        parameter_jButton = new javax.swing.JButton();
        remove_jbutton = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        image_folder_jButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        load_jbutton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jRadio_slide = new javax.swing.JRadioButton();
        jRadio_graph = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Video & Text");
        setForeground(java.awt.Color.gray);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        add_jbutton.setText("ADD");
        add_jbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_jbuttonActionPerformed(evt);
            }
        });

        parameter_jList.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jScrollPane1.setViewportView(parameter_jList);

        para_selected_jList2.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jScrollPane2.setViewportView(para_selected_jList2);

        parameter_jButton.setText("Attach");
        parameter_jButton.setToolTipText("Select Text File");
        parameter_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parameter_jButtonActionPerformed(evt);
            }
        });

        remove_jbutton.setText("Remove");
        remove_jbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_jbuttonActionPerformed(evt);
            }
        });

        image_folder_jButton.setText("Attach");
        image_folder_jButton.setToolTipText("Select Image Folder");
        image_folder_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                image_folder_jButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Parameters from text file");

        jLabel2.setText("Selected Parameters ");

        load_jbutton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        load_jbutton.setText("Load");
        load_jbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                load_jbuttonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Select the Image Folder : ");

        select_radio_Group.add(jRadio_slide);
        jRadio_slide.setText("Parameters");

        select_radio_Group.add(jRadio_graph);
        jRadio_graph.setText("Graph");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Select the Text file :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(image_folder_jButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(parameter_jButton))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(load_jbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(add_jbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(remove_jbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jRadio_graph)
                                            .addComponent(jRadio_slide))))
                                .addGap(14, 14, 14)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 162, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(image_folder_jButton)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parameter_jButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(add_jbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(remove_jbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(jRadio_slide)
                        .addGap(9, 9, 9)
                        .addComponent(jRadio_graph)
                        .addGap(18, 18, 18)
                        .addComponent(load_jbutton)
                        .addGap(36, 36, 36))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void add_jbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_jbuttonActionPerformed
        // TODO add your handling code here:
     
         int[] selectedIx = parameter_jList.getSelectedIndices();
        //System.out.println("selectedIx: "+selectedIx);
        //System.out.println("selectedIx.length:"+selectedIx.length);
        //System.out.println("rightlist.getSize():"+rightlist.getSize());
        if(parameter_jList.getSelectedValue()==null) {
            JOptionPane.showMessageDialog(null, "Select the parameter");
        }
        String item_at_index; 
        for (int i = 0; i < selectedIx.length; i++) {
            item_at_index =parameter_jList.getModel().getElementAt(selectedIx[i]);
            if(!(rightlist.contains(item_at_index))){     
                rightlist.addElement(item_at_index);
            }
        }
        para_selected_jList2.setModel(rightlist);
        
    }//GEN-LAST:event_add_jbuttonActionPerformed

    private void parameter_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parameter_jButtonActionPerformed
            
        //jList1.repaint();
    
        //parameter_jList.removeAll();
        //parameter_jList.repaint(); 
        final JFileChooser text_file = new JFileChooser();
          text_file.setDialogTitle("Select Parameter text file");
         text_file.setCurrentDirectory(new java.io.File("."));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        text_file.setFileFilter(filter);
        //text_file.showOpenDialog(null);
         // For File
        File file_open=null;
        text_file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        text_file.setAcceptAllFileFilterUsed(false);
        text_file.setApproveButtonText("Select");
        text_file.setForeground(new Color(200, 255, 255));
        text_file.setFont(new Font("Trebuchet MS", Font.PLAIN, 12));
        if(text_file.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            file_open=text_file.getSelectedFile();
               if(file_open!=null){
                        rightlist.removeAllElements();
                        leftlist.removeAllElements();
                        parameter_jList.setModel(leftlist);
                        para_selected_jList2.setModel(rightlist);
                        jTextField1.setText("");
                        jTextField1.setText(file_open.getAbsolutePath());
                        populate_parameter2();  
                }
        }//else file not selected
        text_file.addMouseListener(new MouseListener(){
            @Override
            public void mouseClicked(MouseEvent e) {
                if(e.getClickCount()==2){
                    File file_click=text_file.getSelectedFile();
                    if(file_click!=null){
                        rightlist.removeAllElements();
                        leftlist.removeAllElements();
                        parameter_jList.setModel(leftlist);
                        para_selected_jList2.setModel(rightlist);
                        jTextField1.setText("");
                        jTextField1.setText(file_click.getAbsolutePath());
                        populate_parameter2();  
                }
            }
        }

            @Override
            public void mousePressed(MouseEvent e) {
                
            }

            @Override
            public void mouseReleased(MouseEvent e) {

            }

            @Override
            public void mouseEntered(MouseEvent e) {

            }

            @Override
            public void mouseExited(MouseEvent e) {
                
            }
        });  
    }//GEN-LAST:event_parameter_jButtonActionPerformed

    private void populate_parameter(){
    
     
        Scanner s1 = null;
        int i=0;
        int j=0;
        try {     
            s1 = new Scanner(new File(jTextField1.getText()));
            
            s1.nextLine();
            s1.nextLine();
            arr= s1.nextLine().split("\t");
            //System.out.println("Number of parameters are: "+arr.length);
            param_max_count= arr.length;
        for(i=1;i<arr.length;i++){
            
            leftlist.addElement(arr[i]);
        }
        parameter_jList.setModel(leftlist);
           
        } catch (FileNotFoundException ex) {
           JOptionPane.showMessageDialog(null, "File is not found");
        }
        finally{     
        s1.close();
        }
       // System.out.println(j);
    
     
    }
     private void populate_parameter2(){
    
     
        Scanner s1 = null;
        int i=0;
        int j=0;
        try {     
            s1 = new Scanner(new File(jTextField1.getText()));
            String line= s1.nextLine();
            int pos;
            
            if((pos=line.lastIndexOf(";"))!=-1){
                 arr= line.substring(pos+1,line.length()).split(delimeter);
            }
            else{
                arr= line.split(delimeter);
                i=1;
            }
            param_max_count= arr.length;
            while(i<arr.length){ 
                leftlist.addElement(arr[i]);
                i++;
            }
            parameter_jList.setModel(leftlist);
            if( "\t".equals(delimeter) && leftlist.getElementAt(0).toString().contains(",")){
                
                JOptionPane.showMessageDialog(null, "Delimeter of text file should be ======>  "+delimeter+
                    "\n                                   or "+"\nChange the delimeter as per requirement in code.");
                leftlist.removeElementAt(0);
                jTextField1.setText("");
            }else  if(",".equals(delimeter) && leftlist.getElementAt(0).toString().contains("\t")){   
                
                JOptionPane.showMessageDialog(null, "Delimeter of text file should be ======>  "+delimeter+
                    "\n                                   or "+"\nChange the delimeter as per requirement in code.");
                leftlist.removeElementAt(0);
                jTextField1.setText("");
            }
        } catch (FileNotFoundException ex) {
           JOptionPane.showMessageDialog(null, "File is not found");
        }
        finally{ 
            if(s1!=null)    
                s1.close();
        }
    }
    
    private void remove_jbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_jbuttonActionPerformed
        if(rightlist.getSize()==0){
                 JOptionPane.showMessageDialog(null, "No parameters to remove");
        }
        else{
            if(para_selected_jList2.getSelectedIndices().length > 0) {
            int[] selectedIndices = para_selected_jList2.getSelectedIndices();
                for (int i = selectedIndices.length-1; i >=0; i--) {
                    rightlist.removeElementAt(selectedIndices[i]);
                } 
            }
            else{
                JOptionPane.showMessageDialog(null, "Select the parameters to remove");   
            }     
        }        
    }//GEN-LAST:event_remove_jbuttonActionPerformed

    private void image_folder_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_image_folder_jButtonActionPerformed
        // TODO add your handling code here:    
        JFileChooser Image_directory = new JFileChooser();  
        Image_directory.setCurrentDirectory(new java.io.File("."));
        Image_directory.setDialogTitle("Select Image Folder");
        Image_directory.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        Image_directory.setApproveButtonText("Select");
        Image_directory.setAcceptAllFileFilterUsed(false);
        if(Image_directory.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
        File f=Image_directory.getSelectedFile();
            if(f!=null){
                jTextField2.setText("");
                String Image_dir_name=f.getAbsolutePath();
                jTextField2.setText(Image_dir_name);
            }
        }
        //else JOptionPane.showMessageDialog(null, "folder is not selected");
    }//GEN-LAST:event_image_folder_jButtonActionPerformed

    private void load_jbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load_jbuttonActionPerformed
        // TODO add your handling code here:
        int temp=0;
        cols= new int[para_selected_jList2.getModel().getSize()];
        Arrays.fill(cols,-1);
        while(temp<cols.length){
             Object searched =para_selected_jList2.getModel().getElementAt(temp);
        for (int i = 0; i < parameter_jList.getModel().getSize(); i++) {
           Object  item_at_index =parameter_jList.getModel().getElementAt(i);
            if(item_at_index.equals(searched)){     
                cols[temp++]=i;
            }    
        }
        }
        if("".equals(jTextField1.getText()) || "".equals(jTextField2.getText())){
                JOptionPane.showMessageDialog(null, "Image folder or Parameter file is not selected");
        }
        else {
            if(para_selected_jList2.getModel().getSize()!=0){
             
                if(jRadio_graph.isSelected()==true){
                    if(para_selected_jList2.getModel().getSize()<=5){
                        if(!obj_exists){
                            //Irig_g= new Irig_graph(jTextField1.getText(),jTextField2.getText(),param_max_count);
                            Irig_g_p= new Irig_graph_Img(jTextField1.getText(),jTextField2.getText(),param_max_count);
                            this.setState(Gui_Interface.ICONIFIED);
                        }
                        else
                            JOptionPane.showMessageDialog(null, "object is not destroyed");
                        }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Only 5 Parameters can be plotted");
                    }
                }else if(jRadio_slide.isSelected()==true) {
                    if(!obj_exists){
                        Irig_s= new Irig_slide_img(jTextField1.getText(),jTextField2.getText(),para_selected_jList2.getModel().getSize());
                        this.setState(Gui_Interface.ICONIFIED);
                    }
                    else
                        JOptionPane.showMessageDialog(null, "object is not destroyed");   
                } else if(jRadio_graph.isSelected()==false  &&jRadio_slide.isSelected()==false)
                    JOptionPane.showMessageDialog(null, "Select either parameter or graph to display");
                }else{
                JOptionPane.showMessageDialog(null, "Drop parameter to display");
                }        
        }  
    }//GEN-LAST:event_load_jbuttonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui_Interface().setVisible(true); 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_jbutton;
    private javax.swing.JButton image_folder_jButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jRadio_graph;
    private javax.swing.JRadioButton jRadio_slide;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton load_jbutton;
    private javax.swing.JList<String> para_selected_jList2;
    private javax.swing.JButton parameter_jButton;
    private javax.swing.JList<String> parameter_jList;
    private javax.swing.JButton remove_jbutton;
    private javax.swing.ButtonGroup select_radio_Group;
    // End of variables declaration//GEN-END:variables
}
